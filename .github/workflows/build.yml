name: build

on:
  push:
    branches: [ main, feature/* ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ci-${{github.event.pull_request.number || github.ref}}
  cancel-in-progress: true

env:
  BUILD_DIR: build
  BUILD_TYPE: Release
  SCCACHE_GHA_ENABLED: true
  VCPKG_GIT_COMMIT_ID: '8394d2150d8a7774b2fe869bec36ca7832b2f50e'

permissions:
  contents: read

jobs:
  changed: # don't double run on PRs
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    name: check-changed
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{steps.changed-files.outputs.only_changed == 'true'}}

    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 2

      - name: Get changed files
        id: changed-files
        run: |
          CURRENT_COMMIT=$(git rev-parse HEAD)
          PREVIOUS_COMMIT=$(git rev-parse HEAD^)
          CHANGED_FILES=$(git diff --name-only "$PREVIOUS_COMMIT" "$CURRENT_COMMIT")

          only_changed=false

          if [ -n "$CHANGED_FILES" ]; then
            echo "Changed files:"
            echo "$CHANGED_FILES"

            FILTERED_FILES=$(echo "$CHANGED_FILES" | grep "^\.github/workflows/build\.yml$" || echo "$CHANGED_FILES" | grep -vE "^(docs|\.github|.*\.md)" || true)
            if [ ! -n "$FILTERED_FILES" ]; then
              echo "Found only documentation changes"
              only_changed=true
            fi
          else
            echo "No changes found"
            only_changed=true
          fi

          echo "only_changed=$only_changed" >> $GITHUB_OUTPUT

  lint:
    needs: changed
    if: needs.changed.outputs.should_skip != 'true'
    runs-on: ubuntu-latest

    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Lint code
        uses: cpp-linter/cpp-linter-action@b533471f00c693fdb8ce554e7073d340a574511e # v2.16.2
        id: linter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          style: 'file'
          tidy-checks: ''
          ignore: '.github|assets|docs|tools|sponge/deps'
          files-changed-only: false
          step-summary: true
          version: 21

  build:
    needs: changed
    if: needs.changed.outputs.should_skip != 'true'
    name: ${{matrix.name}}
    runs-on: ${{matrix.os}}

    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: mac
            os: macos-latest
            preset: ci-osx-release

          - name: windows
            os: windows-latest
            preset: ci-windows-release

    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup MSVC toolchain
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@0b201ec74fa43914dc39ae48a89fd1d8cb592756 # v1.13.0

      - name: Setup CMake
        uses: lukka/get-cmake@2ecc21724e5215b0e567bc399a2602d2ecb48541 # v4.1.1

      - name: Configure sccache
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        with:
          script: |
            core.exportVariable('ACTIONS_RESULTS_URL', process.env.ACTIONS_RESULTS_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Cache the build
        uses: mozilla-actions/sccache-action@7d986dd989559c6ecdb630a3fd2557667be217ad # v0.0.9

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@7d259227a1fb6471a0253dd5ab7419835228f7d7 # v11
        env:
          VCPKG_BINARY_SOURCES: 'clear;default,readwrite'
        with:
          vcpkgGitURL: 'https://github.com/microsoft/vcpkg.git'

      - name: Create build tree
        run: >
          cmake -B ${{env.BUILD_DIR}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} --preset ${{matrix.preset}}

      - name: Build
        run: cmake --build ${{env.BUILD_DIR}} --config ${{env.BUILD_TYPE}} --target install game --parallel 4

      - name: Upload artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: maze-${{matrix.name}}
          path: ${{github.workspace}}/out/install/${{matrix.preset}}/
          overwrite: true
          retention-days: 1
          if-no-files-found: error
