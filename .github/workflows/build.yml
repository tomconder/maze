name: build

on:
  push:
    branches: [ main, feature/* ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ci-${{github.event.pull_request.number || github.ref}}
  cancel-in-progress: true

env:
  BUILD_DIR: build
  BUILD_TYPE: Release
  SCCACHE_GHA_ENABLED: true
  VCPKG_GIT_COMMIT_ID: 'efb1e7436979a30c4d3e5ab2375fd8e2e461d541'

permissions:
  contents: read

jobs:
  changed: # don't double run on PRs
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    name: check-changed
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{steps.changed-files.outputs.only_changed == 'true'}}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get changed files
        id: changed
        run: |
          should_skip=false
          CHANGED_FILES=$(git diff --name-only $GITHUB_BASE_REF...HEAD)
          echo 
          if echo "$CHANGED_FILES" | grep -q "^docs|^\.github|^.*\.md"; then
              echo "Found changed files"
              should_skip=true
          fi
          echo "should_skip=$should_skip" >> $GITHUB_OUTPUT

  lint:
    needs: changed
    if: needs.changed.outputs.should_skip != 'true'
    runs-on: windows-latest

    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Lint code
        uses: cpp-linter/cpp-linter-action@v2
        id: linter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          style: 'file'
          tidy-checks: ''
          ignore: '.github|assets|docs|tools'
          step-summary: true

  build:
    needs: changed
    if: needs.changed.outputs.should_skip != 'true'
    name: ${{matrix.name}}
    runs-on: ${{matrix.os}}

    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: mac
            os: macos-latest
            preset: ci-osx-release

          - name: windows
            os: windows-latest
            preset: ci-windows-release

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup MSVC toolchain
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Setup CMake
        uses: lukka/get-cmake@latest

      - name: Cache the build
        uses: mozilla-actions/sccache-action@v0.0.7

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: '${{github.workspace}}/b/vcpkg'
          vcpkgGitCommitId: '${{env.VCPKG_GIT_COMMIT_ID}}'
          vcpkgGitURL: 'https://github.com/microsoft/vcpkg.git'

      - name: Create build tree
        run: >
          cmake -B ${{env.BUILD_DIR}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} --preset ${{matrix.preset}}
          -DGIT_SHA=${{github.sha}}

      - name: Build
        run: cmake --build ${{env.BUILD_DIR}} --config ${{env.BUILD_TYPE}} --target install game --parallel 4

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: maze-${{matrix.name}}
          path: ${{github.workspace}}/out/install/${{matrix.preset}}/
          overwrite: true
          retention-days: 1
          if-no-files-found: error
