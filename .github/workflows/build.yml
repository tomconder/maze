name: build

on:
  push:
    branches:
      - main
      - feature/*
    paths-ignore:
      - '**.md'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'
  workflow_dispatch:

# cancel running builds if a new commit is pushed
concurrency:
  group: ${{github.ref}}
  cancel-in-progress: true

env:
  BUILD_DIR: build
  BUILD_TYPE: Release
  CMAKE_CXX_COMPILER_LAUNCHER: sccache
  CMAKE_C_COMPILER_LAUNCHER: sccache
  SCCACHE_GHA_ENABLED: true
  VCPKG_GIT_COMMIT_ID: '198d68dbcc6c907cb3d0b9b1d93c3df6ecf93c62'

defaults:
  run:
    shell: bash

permissions:
  contents: read

jobs:
  build: # don't double run on PRs
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    name: ${{matrix.name}}
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: linux
            os: ubuntu-latest
            preset: linux-release

          - name: osx
            os: macos-latest
            preset: osx-release

          - name: windows
            os: windows-latest
            preset: x64-release

    steps:
      - name: Install linux packages
        if: runner.os == 'Linux'
        run: >
          sudo apt-get update -qq &&
          sudo apt-get install -qq -y --no-install-recommends libasound2-dev libgl1-mesa-dev libx11-dev libxcursor-dev
          libxext-dev libxfixes-dev libxft-dev libxi-dev libxinerama-dev libxrandr-dev

      - name: Setup MSVC toolchain
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Setup CMake
        uses: lukka/get-cmake@latest

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache the build
        uses: mozilla-actions/sccache-action@v0.0.4

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: '${{runner.workspace}}/b/vcpkg'
          vcpkgGitCommitId: '${{env.VCPKG_GIT_COMMIT_ID}}'
          vcpkgGitURL: 'https://github.com/microsoft/vcpkg.git'

      - name: Configure CMake
        run: >
          cmake -B ${{env.BUILD_DIR}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} --preset ${{matrix.preset}}
          -DGIT_SHA=${{github.sha}}

      - name: Build
        run: cmake --build ${{env.BUILD_DIR}} --config ${{env.BUILD_TYPE}} --target install game --parallel 4

      - name: Upload linux artifact
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v4
        with:
          name: maze-linux
          path: ${{github.workspace}}/out/install/linux-release/
          retention-days: 1
          if-no-files-found: error

      - name: Upload mac artifact
        if: ${{ matrix.name == 'osx' }}
        uses: actions/upload-artifact@v4
        with:
          name: maze-mac
          path: ${{github.workspace}}/out/install/osx-release/
          retention-days: 1
          if-no-files-found: error

      - name: Upload windows artifact
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: maze-windows
          path: ${{github.workspace}}/out/install/x64-release/
          retention-days: 1
          if-no-files-found: error
